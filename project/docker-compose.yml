version: '3.9'


services:
  database:
    image: postgres
    hostname: ${POSTGRES_HOST}
    container_name: postgres_container
    command: -p ${POSTGRES_PORT}
    restart: on-failure
    environment: 
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - ${POSTGRES_PORT}
    ports: 
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    env_file:
      - .env
    networks: 
      - main
    volumes: 
      - ./data/postgres:/var/lib/postgresql/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    depends_on:
      - database
    ports:
      - "5050:80"
    env_file:
      - .env
    networks:
      - main
    volumes:
      - /data/pgadmin:/var/lib/pgadmin/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro


  redis:
    image: redis
    hostname: ${REDIS_HOST}
    container_name: ${REDIS_HOST}
    restart: on-failure
    command: sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    ports:
      - ${REDIS_PORT}:{REDIS_PORT}
    env_file:
      - .env
    networks:
      - main
    volumes:
      - ./data/redis:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro


  web:
    build: .
    image: web:3.0
    hostname: web
    container_name: web_container
    command: sh -c "python3 manage.py makemigrations && 
            python3 manage.py migrate --no-input && 
            python manage.py runserver 0.0.0.0:8000"
            # uwsgi --ini uwsgi.ini
            # gunicorn -k gevent project.config.wsgi:application -b 0.0.0.0:8000
    restart: on-failure
    depends_on:
      - redis
      - database
    env_file:
      - .env
    expose: 
      - ${DJANGO_PORT}
    ports:
      - ${DJANGO_PORT}:${DJANGO_PORT}
    networks:
      - main
    volumes: 
      - .:/web/
      - ./media:/media
      - ./static:/static
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro


  nginx:
    image: nginx
    hostname: nginx
    container_name: nginx
    command: sh -c "nginx -g 'daemon off;'"
    restart: on-failure
    depends_on:
      - web
    networks: 
      - main
    expose:
      - "80"
    ports: 
      - "80:80"
    volumes: 
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./media:/web/media
      - ./static:/web/static
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro


networks:
  main:
    name: main


volumes:
  data:
  static:
  media:
