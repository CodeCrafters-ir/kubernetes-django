version: '3.9'

services:
  database_brity:
    image: postgres
    hostname: ${POSTGRES_HOST}
    container_name: brity_postgres_container
    command: -p ${POSTGRES_PORT}
    restart: on-failure
    environment: 
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - ${POSTGRES_PORT}
    ports: 
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    env_file:
      - .env
    volumes: 
      - ./data/brity/postgres:/var/lib/postgresql/data 
    networks: 
      - main
      

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    depends_on:
      - database_brity
    ports:
      - "5050:80"
    env_file:
      - .env
    volumes:
      - /data/brity/pgadmin:/var/lib/pgadmin/data
    networks:
      - main


  redis_brity:
    image: redis
    hostname: ${REDIS_HOST}
    container_name: ${REDIS_HOST}
    restart: on-failure
    command: sh -c "redis-server --requirepass ${REDIS_PASSWORD} &&
                    redis-server /usr/local/etc/redis/redis.conf && --port ${REDIS_PORT}"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    ports:
      - ${REDIS_PORT}:{REDIS_PORT}
    env_file:
      - .env
    volumes:
      - ./data/brity/redis:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - main


  web:
    build: .
    image: web:3.0
    hostname: web
    container_name: web_container
    command: sh -c "python3 manage.py makemigrations && 
            python3 manage.py migrate --no-input && 
            python manage.py runserver 0.0.0.0:8000"
    restart: on-failure
    env_file:
      - .env
    expose: 
      - ${DJANGO_PORT}
    ports:
      - ${DJANGO_PORT}:${DJANGO_PORT}
    networks:
      - main
    volumes: 
      - .:/web/
      - ./media:/project/media
      - ./static:/project/static


networks:
  main:
    name: main


volumes:
  data:
  static:
  media:
